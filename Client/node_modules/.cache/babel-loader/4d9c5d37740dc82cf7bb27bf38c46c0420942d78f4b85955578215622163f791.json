{"ast":null,"code":"const validation = ({\n  email,\n  password\n}, errors, setErrors) => {\n  let newErrors = {\n    ...errors\n  };\n  if (!email || !email.trim()) {\n    newErrors.email = \"El email está vacío\";\n  } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(email)) {\n    newErrors.email = \"El usuario tiene que ser un correo válido\"; //formato de email@mail.com\n  } else if (email.length > 35) {\n    newErrors.email = \"El email no debe superar los 35 caracteres\";\n  } else {\n    newErrors.email = \"\";\n  }\n  if (!/\\d/.test(password)) {\n    newErrors.password = \"La contraseña debe contener al menos un número\";\n  } else if (!(password.length >= 6 && password.length <= 10)) {\n    newErrors.password = \"La contraseña debe tener una longitud entre 6 y 10 caracteres\";\n  } else {\n    newErrors.password = \"\";\n  }\n  setErrors(newErrors);\n};\nexport default validation;","map":{"version":3,"names":["validation","email","password","errors","setErrors","newErrors","trim","test","length"],"sources":["C:/Users/Matias/Desktop/Proyecto Integrador/rick_and_morty/Client/src/components/Form/validation.js"],"sourcesContent":["\r\n\r\nconst validation = ({email, password}, errors, setErrors)=>{\r\n    \r\n       let newErrors = {...errors};\r\n\r\n    if (!email || !email.trim()) {\r\n        newErrors.email = \"El email está vacío\";\r\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(email)) {\r\n        newErrors.email = \"El usuario tiene que ser un correo válido\"; //formato de email@mail.com\r\n    } else if (email.length > 35) {\r\n        newErrors.email = \"El email no debe superar los 35 caracteres\";\r\n    } else {\r\n        newErrors.email = \"\";\r\n    }\r\n\r\n    if (!(/\\d/.test(password))) {\r\n        newErrors.password = \"La contraseña debe contener al menos un número\";\r\n    } else if (!(password.length >= 6 && password.length <= 10)) {\r\n        newErrors.password = \"La contraseña debe tener una longitud entre 6 y 10 caracteres\";\r\n    } else {\r\n        newErrors.password = \"\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n}\r\n\r\nexport default validation;"],"mappings":"AAEA,MAAMA,UAAU,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAQ,CAAC,EAAEC,MAAM,EAAEC,SAAS,KAAG;EAEpD,IAAIC,SAAS,GAAG;IAAC,GAAGF;EAAM,CAAC;EAE9B,IAAI,CAACF,KAAK,IAAI,CAACA,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;IACzBD,SAAS,CAACJ,KAAK,GAAG,qBAAqB;EAC3C,CAAC,MAAM,IAAI,CAAC,6CAA6C,CAACM,IAAI,CAACN,KAAK,CAAC,EAAE;IACnEI,SAAS,CAACJ,KAAK,GAAG,2CAA2C,CAAC,CAAC;EACnE,CAAC,MAAM,IAAIA,KAAK,CAACO,MAAM,GAAG,EAAE,EAAE;IAC1BH,SAAS,CAACJ,KAAK,GAAG,4CAA4C;EAClE,CAAC,MAAM;IACHI,SAAS,CAACJ,KAAK,GAAG,EAAE;EACxB;EAEA,IAAI,CAAE,IAAI,CAACM,IAAI,CAACL,QAAQ,CAAE,EAAE;IACxBG,SAAS,CAACH,QAAQ,GAAG,gDAAgD;EACzE,CAAC,MAAM,IAAI,EAAEA,QAAQ,CAACM,MAAM,IAAI,CAAC,IAAIN,QAAQ,CAACM,MAAM,IAAI,EAAE,CAAC,EAAE;IACzDH,SAAS,CAACH,QAAQ,GAAG,+DAA+D;EACxF,CAAC,MAAM;IACHG,SAAS,CAACH,QAAQ,GAAG,EAAE;EAC3B;EAEAE,SAAS,CAACC,SAAS,CAAC;AACxB,CAAC;AAED,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}