{"ast":null,"code":"const validation = ({\n  userData,\n  errors,\n  setErrors\n}) => {\n  if (!userData.email) {\n    setErrors({\n      ...errors,\n      email: \"El email esta vacio\"\n    });\n  } else {\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n      setErrors({\n        ...errors,\n        email: \"El usuario tiene que ser un mail\"\n      });\n    } //formato de email@mail.com\n    else {\n      if (userData.email.length >= 35) {\n        setErrors({\n          ...errors,\n          email: \"El email no debe superar los 35 caracteres\"\n        });\n      } else {\n        setErrors({\n          ...errors,\n          email: \"\"\n        });\n      }\n    }\n  }\n  if (!/\\d/.test(userData.password)) {\n    setErrors({\n      ...errors,\n      password: \"La contrase単a debe contener al menos un numero\"\n    });\n  } else {\n    if (!(userData.password.length >= 6 && userData.password.length <= 10)) {\n      setErrors({\n        ...errors,\n        password: \"La contrase単a tiene que tener una longitud entre 6 y 10 caracteres\"\n      });\n    } else {\n      setErrors({\n        ...errors,\n        password: \"\"\n      });\n    }\n  }\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","setErrors","email","test","length","password"],"sources":["C:/Users/Matias/Desktop/Proyecto Integrador/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["\r\n\r\nconst validation = ({userData, errors, setErrors})=>{\r\n    if (!userData.email) {\r\n        setErrors({...errors, email:\"El email esta vacio\"});}\r\n    else{\r\n     if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email))){ \r\n     setErrors({...errors, email:\"El usuario tiene que ser un mail\"});} //formato de email@mail.com\r\n     else{\r\n        if ((userData.email.length>=35)){\r\n            setErrors({...errors, email:\"El email no debe superar los 35 caracteres\"});}\r\n        else {setErrors({...errors, email:\"\"});\r\n    }\r\n     }\r\n    }\r\n\r\n\r\n     if (!(/\\d/.test(userData.password))) {\r\n        setErrors({...errors, password:\"La contrase単a debe contener al menos un numero\"});}\r\n        else{\r\n            if(!(userData.password.length>=6 && userData.password.length<=10)){\r\n                setErrors({...errors, password:\"La contrase単a tiene que tener una longitud entre 6 y 10 caracteres\"});   \r\n            } else{\r\n                setErrors({...errors, password:\"\"});\r\n            }\r\n        } \r\n}\r\n\r\nexport default validation;"],"mappings":"AAEA,MAAMA,UAAU,GAAGA,CAAC;EAACC,QAAQ;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAG;EAChD,IAAI,CAACF,QAAQ,CAACG,KAAK,EAAE;IACjBD,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,KAAK,EAAC;IAAqB,CAAC,CAAC;EAAC,CAAC,MACrD;IACH,IAAI,CAAE,+CAA+C,CAACC,IAAI,CAACJ,QAAQ,CAACG,KAAK,CAAE,EAAC;MAC5ED,SAAS,CAAC;QAAC,GAAGD,MAAM;QAAEE,KAAK,EAAC;MAAkC,CAAC,CAAC;IAAC,CAAC,CAAC;IAAA,KAC/D;MACD,IAAKH,QAAQ,CAACG,KAAK,CAACE,MAAM,IAAE,EAAE,EAAE;QAC5BH,SAAS,CAAC;UAAC,GAAGD,MAAM;UAAEE,KAAK,EAAC;QAA4C,CAAC,CAAC;MAAC,CAAC,MAC3E;QAACD,SAAS,CAAC;UAAC,GAAGD,MAAM;UAAEE,KAAK,EAAC;QAAE,CAAC,CAAC;MAC1C;IACC;EACD;EAGC,IAAI,CAAE,IAAI,CAACC,IAAI,CAACJ,QAAQ,CAACM,QAAQ,CAAE,EAAE;IAClCJ,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEK,QAAQ,EAAC;IAAgD,CAAC,CAAC;EAAC,CAAC,MAC/E;IACA,IAAG,EAAEN,QAAQ,CAACM,QAAQ,CAACD,MAAM,IAAE,CAAC,IAAIL,QAAQ,CAACM,QAAQ,CAACD,MAAM,IAAE,EAAE,CAAC,EAAC;MAC9DH,SAAS,CAAC;QAAC,GAAGD,MAAM;QAAEK,QAAQ,EAAC;MAAoE,CAAC,CAAC;IACzG,CAAC,MAAK;MACFJ,SAAS,CAAC;QAAC,GAAGD,MAAM;QAAEK,QAAQ,EAAC;MAAE,CAAC,CAAC;IACvC;EACJ;AACR,CAAC;AAED,eAAeP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}