{"ast":null,"code":"const validation = ({\n  email,\n  password\n}, errors, setErrors) => {\n  if (!email) {\n    setErrors({\n      ...errors,\n      email: \"El email esta vacio\"\n    });\n  } else {\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(email)) {\n      setErrors({\n        ...errors,\n        email: \"El usuario tiene que ser un mail\"\n      });\n    } //formato de email@mail.com\n    else {\n      if (email.length > 35) {\n        setErrors({\n          ...errors,\n          email: \"El email no debe superar los 35 caracteres\"\n        });\n      } else {\n        setErrors({\n          ...errors,\n          email: \"\"\n        });\n      }\n    }\n  }\n  if (!/\\d/.test(password)) {\n    setErrors({\n      ...errors,\n      password: \"La contrase単a debe contener al menos un numero\"\n    });\n  } else {\n    if (!(password.length >= 6 && password.length <= 10)) {\n      setErrors({\n        ...errors,\n        password: \"La contrase単a tiene que tener una longitud entre 6 y 10 caracteres\"\n      });\n    } else {\n      setErrors({\n        ...errors,\n        password: \"\"\n      });\n    }\n  }\n};\nexport default validation;","map":{"version":3,"names":["validation","email","password","errors","setErrors","test","length"],"sources":["C:/Users/Matias/Desktop/Proyecto Integrador/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["\r\n\r\nconst validation = ({email, password}, errors, setErrors)=>{\r\n    if (!email) {\r\n        setErrors({...errors, email:\"El email esta vacio\"});}\r\n    else{\r\n     if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(email)){ \r\n     setErrors({...errors, email:\"El usuario tiene que ser un mail\"});} //formato de email@mail.com\r\n     else{\r\n        if ((email.length>35)){\r\n            setErrors({...errors, email:\"El email no debe superar los 35 caracteres\"});}\r\n        else {setErrors({...errors, email:\"\"});\r\n    }\r\n     }\r\n    }\r\n\r\n\r\n     if (!(/\\d/.test(password))) {\r\n        setErrors({...errors, password:\"La contrase単a debe contener al menos un numero\"});}\r\n        else{\r\n            if(!(password.length>=6 && password.length<=10)){\r\n                setErrors({...errors, password:\"La contrase単a tiene que tener una longitud entre 6 y 10 caracteres\"});   \r\n            } else{\r\n                setErrors({...errors, password:\"\"});\r\n            }\r\n        } \r\n}\r\n\r\nexport default validation;"],"mappings":"AAEA,MAAMA,UAAU,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAQ,CAAC,EAAEC,MAAM,EAAEC,SAAS,KAAG;EACvD,IAAI,CAACH,KAAK,EAAE;IACRG,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEF,KAAK,EAAC;IAAqB,CAAC,CAAC;EAAC,CAAC,MACrD;IACH,IAAI,CAAC,6CAA6C,CAACI,IAAI,CAACJ,KAAK,CAAC,EAAC;MAC/DG,SAAS,CAAC;QAAC,GAAGD,MAAM;QAAEF,KAAK,EAAC;MAAkC,CAAC,CAAC;IAAC,CAAC,CAAC;IAAA,KAC/D;MACD,IAAKA,KAAK,CAACK,MAAM,GAAC,EAAE,EAAE;QAClBF,SAAS,CAAC;UAAC,GAAGD,MAAM;UAAEF,KAAK,EAAC;QAA4C,CAAC,CAAC;MAAC,CAAC,MAC3E;QAACG,SAAS,CAAC;UAAC,GAAGD,MAAM;UAAEF,KAAK,EAAC;QAAE,CAAC,CAAC;MAC1C;IACC;EACD;EAGC,IAAI,CAAE,IAAI,CAACI,IAAI,CAACH,QAAQ,CAAE,EAAE;IACzBE,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAED,QAAQ,EAAC;IAAgD,CAAC,CAAC;EAAC,CAAC,MAC/E;IACA,IAAG,EAAEA,QAAQ,CAACI,MAAM,IAAE,CAAC,IAAIJ,QAAQ,CAACI,MAAM,IAAE,EAAE,CAAC,EAAC;MAC5CF,SAAS,CAAC;QAAC,GAAGD,MAAM;QAAED,QAAQ,EAAC;MAAoE,CAAC,CAAC;IACzG,CAAC,MAAK;MACFE,SAAS,CAAC;QAAC,GAAGD,MAAM;QAAED,QAAQ,EAAC;MAAE,CAAC,CAAC;IACvC;EACJ;AACR,CAAC;AAED,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}